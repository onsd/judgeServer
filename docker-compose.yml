version: "3"
services:
  postgres:
    image: postgres
    container_name: postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - TZ=`ls -la /etc/localtime | cut -d/ -f8-9`
    tty: true
    restart: always
    user: postgres
    volumes:
      - ./postgresql/init:/docker-entrypoint-initdb.d
      - postgres-db:/var/lib/postgresql/data
  sqs:
    build: ./elasticMQ
    ports: 
      - 9324:9324
  server:
    build: ./server
    depends_on:
      - postgres
      - sqs
    links:
      - postgres:postgres
    volumes:
      - ./go/src:/go/src/workdir/src
    ports:
      - "8080:8080"
    environment:
      - HOSTNAME=postgres
      - USER=postgres
      - DBNAME=wantedly
      - PASSWORD=password
      - CGO_ENABLED=0
      - GO111MODULE=on
      - PORT=8080
      - DB_PORT=5432
      - SQS_ENDPOINT=http://sqs:9324
      - SQS_REGION=ap-northeast-1
      - AWS_ACCESS_KEY_ID=AWS_ACCESS_KEY_ID
      - AWS_SECRET_ACCESS_KEY=AWS_SECRET_ACCESS_KEY
  worker:
    build: ./utils
    depends_on: 
      - sqs    
    environment: 
      - SQS_ENDPOINT=http://sqs:9324/
      - SQS_REGION=ap-northeast-1
      - AWS_ACCESS_KEY=TEST
      - AWS_SECRET_KEY=TEST
      - AWS_REGION=ap-northeast-1
      - SERVER_URL=http://server:8080/api/
      - PORT=8000

volumes:
  postgres-db:
    driver: local
